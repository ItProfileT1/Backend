services:
  db:
    container_name: db
    image: postgres:17
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  it-profile-backend:
    container_name: it-profile-backend
    image: abrodep/t1-it-profile-backend:latest
    ports:
      - '8080:8080'
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_KAFKA_SERVER: kafka:29092
  it-profile-frontend:
    container_name: it-profile-frontend
    image: abrodep/t1-it-profile-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=10.4.56.98
    depends_on:
      - it-profile-backend
  tech-radar-backend:
    container_name: tech-radar-backend
    image: shimady563/t1-debut-team5-backend:latest
    ports:
      - "8090:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      it-profile-backend:
        condition: service_completed_successfully
      db:
        condition: service_started
      redis:
        condition: service_started
  tech-radar-frontend:
    container_name: tech-radar-frontend
    image: shimady563/t1-debut-team5-frontend:latest
    ports:
      - "5173:5173"
    depends_on:
      tech-radar-backend:
        condition: service_started
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092, PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  redis:
    container_name: redis
    image: redis:alpine
    command: [ "redis-server", "--save", "", "--appendonly", "no", "--requirepass", "redis" ]
    restart: always
    volumes:
      - redis-data:/data
    expose:
      - 6379
volumes:
  redis-data:
