services:
  db:
    image: postgres:17
    restart: on-failure
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  it-profile-backend:
    image: abrodep/t1-it-profile-backend:latest
    ports:
      - '8080:8080'
    depends_on:
      - db
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29093
  it-profile-frontend:
    image: abrodep/t1-it-profile-frontend:latest
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - it-profile-backend
  tech_radar:
    container_name: tech_radar
    image: shimady563/t1-debut-team5-backend:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=redis
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29093
    depends_on:
      - db
      - kafka
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    restart: always
    expose:
      - 22181
    environment:
      - ZOOKEEPER_CLIENT_PORT=22181
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    restart: always
    expose:
      - 29093
    ports:
      - "9092:29093"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:22181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "29093" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - zookeeper